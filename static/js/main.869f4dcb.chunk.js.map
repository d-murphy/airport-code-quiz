{"version":3,"sources":["App.js","GameControls.js","ApCodeInput.js","AiportName.js","CorrectTotal.js","AnswerReview.js","index.js"],"names":["checkIfDup","GameControl","class","onSubmit","this","props","updatePoolProp","React","Component","ApCodeInput","activeLetter","thisLetter","id","ref","onChange","saveAnswer","maxLength","autoFocus","value","currentLetter","disabled","AirportName","currentAirport","questions","QuestionNum","CorrectTotal","correctAnswers","questionNum","AnswerReview","answers","currentAnswers","answerNum","i","push","map","Code","dataPositionsToInclude","length","Math","floor","random","data","includes","currentGame","GameStage","gameStatus","updateStageProp","updateStage","letterInput","letter","key","letterNum","blankForm","App","state","gamePool","letterEntry","currentAnswer","updatePool","bind","logState","event","setState","letterFormCtrl","item","index","target","toUpperCase","ansArr","threeLetterAnswer","answerCorrect","gameStage","console","log","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.869f4dcb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport GameControl from './GameControls';\r\nimport ApCodeInput from './ApCodeInput';\r\nimport data from  './data.json';\r\nimport AirportName from './AiportName';\r\nimport CorrectTotal from './CorrectTotal.js'\r\nimport AnswerReview from './AnswerReview.js'\r\n\r\n\r\nvar dataPositionsToInclude = [];\r\nvar checkIfDup; \r\n\r\nwhile(dataPositionsToInclude.length<10){\r\n  checkIfDup = Math.floor(Math.random() * data.length)\r\n  if(! dataPositionsToInclude.includes(checkIfDup)){\r\n    dataPositionsToInclude.push(checkIfDup)\r\n  }\r\n}\r\n\r\nvar currentGame = [];\r\n\r\nfor(var i = 0; i<10; i++){\r\n  currentGame.push(data[dataPositionsToInclude[i]])\r\n}\r\n\r\n  function GameStage(props) {\r\n    const gameStatus = props.gameStatus;\r\n    if (gameStatus === 'WaitForStart') {\r\n      return <GameControl updatePoolProp={props.updatePoolProp}\r\n                          updateStageProp={props.updateStage} />;\r\n    } else if (gameStatus === 'gameStage') {\r\n      const letterInput = props.letterInput;\r\n      return (\r\n        <div>\r\n        <AirportName questions={props.questions} QuestionNum={props.questionNum}/>   \r\n          <div class=\"codeInput\">  \r\n            {letterInput.map((letter, key) =>\r\n              <ApCodeInput activeLetter={props.activeLetter} thisLetter={letter.letterNum}\r\n                          saveAnswer = {props.saveAnswer} \r\n                          currentLetter = {letter.currentLetter} \r\n              />\r\n            )}\r\n          </div>\r\n          <div class=\"correctTotal\">\r\n            <CorrectTotal correctAnswers = {props.correctAnswers}\r\n                            questionNum = {props.questionNum} />\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n      <div>\r\n        <p>Quiz complete!</p>\r\n        <div class=\"correctTotal\">\r\n          <CorrectTotal correctAnswers = {props.correctAnswers}\r\n                            questionNum = {props.questionNum} />\r\n        </div>\r\n        <div class=\"answerTable\">\r\n          <AnswerReview questions = {props.questions} \r\n                        currentAnswers = {props.currentAnswers} />\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n\r\n}\r\n\r\nconst blankForm = [{letterNum: 0, currentLetter: \"\"},\r\n                   {letterNum: 1, currentLetter: \"\"},\r\n                   {letterNum: 2, currentLetter: \"\"}]\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state = {\r\n      gameStatus: 'WaitForStart', \r\n      gamePool: 'USTop50',\r\n      questionNum: 0,\r\n      letterEntry: 0,\r\n      currentGame: currentGame,\r\n      currentAnswers: [],\r\n      letterInput: blankForm,\r\n      currentAnswer: \"\",\r\n      correctAnswers: 0\r\n    }; \r\n    this.updatePool = this.updatePool.bind(this);\r\n    this.logState = this.logState.bind(this);\r\n    this.saveAnswer = this.saveAnswer.bind(this);\r\n  }\r\n\r\n  \r\n\r\n  updatePool(event) {\r\n    this.setState({gameStatus: \"gameStage\"});\r\n  }\r\n\r\n  saveAnswer(event) {\r\n\r\n    if(this.state.letterEntry <2 ) {\r\n      \r\n      const letterFormCtrl = this.state.letterInput.map((item, index) => \r\n                                                      {if(index===this.state.letterEntry){\r\n                                                        return({letterNum: index, \r\n                                                                currentLetter: event.target.value.toUpperCase()})\r\n                                                      } else {\r\n                                                        return(item)\r\n                                                      }\r\n                                                    })                                \r\n      this.setState({\r\n        letterEntry: this.state.letterEntry + 1,\r\n        letterInput: letterFormCtrl,\r\n      }) \r\n    } else {\r\n      var ansArr = this.state.letterInput.map((item, index) => item.currentLetter)\r\n      var threeLetterAnswer = ansArr[0] + ansArr[1] + event.target.value.toUpperCase()\r\n      var answerCorrect = this.state.currentGame[this.state.questionNum].Code === threeLetterAnswer ? 1 : 0; \r\n      var gameStage = this.state.questionNum < 9 ? 'gameStage' : 'gameOver'\r\n      this.setState({\r\n        letterEntry: 0,\r\n        letterInput: blankForm,\r\n        currentAnswers: [...this.state.currentAnswers, threeLetterAnswer], \r\n        questionNum: this.state.questionNum + 1, \r\n        correctAnswers: this.state.correctAnswers + answerCorrect, \r\n        gameStatus: gameStage\r\n      }) \r\n    }      \r\n  }\r\n\r\n  logState(){\r\n    console.log(this.state); \r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n    <div className=\"App\">\r\n      <h1>Airport Code Quiz</h1>\r\n      <div class=\"codeInput\">\r\n        <GameStage gameStatus={this.state.gameStatus} \r\n          updatePoolProp = {this.updatePool} \r\n          activeLetter = {this.state.letterEntry} \r\n          saveAnswer = {this.saveAnswer} \r\n          letterInput = {this.state.letterInput} \r\n          questions = {this.state.currentGame}\r\n          questionNum = {this.state.questionNum}\r\n          correctAnswers = {this.state.correctAnswers}\r\n          currentAnswers = {this.state.currentAnswers}\r\n           />\r\n      </div>\r\n{/*   \r\n      <br/>\r\n      <br/>\r\n      <div class=\"LogStateBut\" onClick={this.logState}>Log State</div>\r\n*/}  \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\r\n\r\nclass GameControl extends React.Component {\r\n    render() {\r\n      return (\r\n        <div class=\"gameControl\">\r\n          <p></p>\r\n          <form onSubmit={this.props.updatePoolProp}>\r\n            <button class=\"button\">Start the Quiz!</button>\r\n          </form>\r\n        </div>\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n  export default GameControl; ","import React from 'react';\r\n\r\n class ApCodeInput extends React.Component {\r\n\r\n    render() {\r\n    if(this.props.activeLetter === this.props.thisLetter){\r\n      return (\r\n        <div class=\"codeEntry\" id=\"activeLetter\" ref=\"titleInput\">\r\n          <form >\r\n            <textarea \r\n            onChange={this.props.saveAnswer} maxLength=\"1\" autoFocus class=\"letterEntry\" \r\n            value = {this.props.currentLetter} \r\n            />\r\n          </form>\r\n        </div>\r\n      )} else {\r\n        return(\r\n        <div class=\"codeEntryDisabled\" >\r\n          <form >\r\n            <textarea disabled value = {this.props.currentLetter} />\r\n          </form>\r\n        </div>\r\n      )}\r\n    }\r\n  }\r\n\r\n  export default ApCodeInput; ","import React from 'react';\r\n\r\nclass AirportName extends React.Component {\r\n  render() {\r\n    var questions = this.props.questions\r\n    var currentAirport = questions[this.props.QuestionNum].AirportName\r\n    return(\r\n        <div>\r\n            {currentAirport}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AirportName","import React from 'react';\r\n\r\nclass CorrectTotal extends React.Component {\r\n  render() {\r\n    return(\r\n        <div>\r\n            {this.props.correctAnswers} of {this.props.questionNum} Airports correct\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CorrectTotal","import React from 'react';\r\n\r\nclass AnswerReview extends React.Component {\r\n  render() {\r\n//    var questions = this.props.questions\r\n//    var currentAirport = questions[this.props.QuestionNum].AirportName\r\n\r\n\r\n    var questions = this.props.questions\r\n    var answers = this.props.currentAnswers\r\n\r\n    var answerNum = []\r\n    for(var i=0; i<10; i++){\r\n        answerNum.push(i)\r\n    }\r\n    return(\r\n        <div>\r\n            <table>\r\n            <tr>\r\n              <th>Airport</th>\r\n              <th>Airport Code</th>\r\n              <th>Your Guess</th>\r\n            </tr>\r\n            {answerNum.map((answerNum) =>\r\n              <tr>\r\n                <td>{questions[answerNum].AirportName}</td>\r\n                <td>{questions[answerNum].Code}</td>\r\n                <td>{answers[answerNum]}</td>\r\n              </tr>\r\n            )}\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AnswerReview","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}